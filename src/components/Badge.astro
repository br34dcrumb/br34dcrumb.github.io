---
import { Badge as BadgeComponent } from '@/components/ui/badge'
import { cn } from '@/lib/utils'
import { Icon } from 'astro-icon/components'

interface Props {
  variant?: 'default' | 'secondary' | 'destructive' | 'outline'
  className?: string
  children?: any
  text?: string
  showIcon?: boolean
}

const {
  variant = 'secondary',
  className = '',
  children,
  text,
  showIcon = true,
} = Astro.props

const categoryMappings = [
  {
    keywords: ['crypto'],
    style: {
      color:
        'bg-yellow-950/30 text-yellow-200',
      icon: 'lucide:key',
    },
  },
  {
    keywords: ['web'],
    style: {
      color: 'bg-blue-950/30 text-blue-200',
      icon: 'lucide:globe',
    },
  },
  {
    keywords: ['hardware', 'hw'],
    style: {
      color:
        'bg-orange-950/30 text-orange-200',
      icon: 'lucide:cpu',
    },
  },
  {
    keywords: ['pwn', 'binary exploitation'],
    style: {
      color: 'bg-red-950/30 text-red-200',
      icon: 'lucide:zap',
    },
  },
  {
    keywords: ['misc'],
    style: {
      color:
        'bg-stone-950/30 text-stone-200',
      icon: 'lucide:puzzle',
    },
  },
  {
    keywords: ['forensic'],
    style: {
      color:
        'bg-green-950/30 text-green-200',
      icon: 'lucide:search',
    },
  },
  {
    keywords: ['osint'],
    style: {
      color:
        'bg-purple-950/30 text-purple-200',
      icon: 'lucide:eye',
    },
  },
  {
    keywords: ['rev', 'reverse'],
    style: {
      color:
        'bg-indigo-950/30 text-indigo-200',
      icon: 'lucide:rotate-ccw',
    },
  },
  {
    keywords: ['travel'],
    style: {
      color:
        'bg-sky-950/30 text-sky-200',
      icon: 'lucide:plane',
    },
  },
  {
    keywords: ['ctf'],
    style: {
      color:
        'bg-teal-950/30 text-teal-200',
      icon: 'lucide:flag',
    },
  },
  {
    keywords: ['commercial'],
    style: {
      color: 'text-foreground bg-foreground/10',
      icon: 'lucide:building-2',
    },
  },
  {
    keywords: ['personal'],
    style: {
      // color: 'bg-sky-950/30 text-sky-200',
      icon: 'lucide:user',
    },
  },
  {
    keywords: ['open-source'],
    style: {
      // color: 'bg-emerald-950/30 text-emerald-200',
      icon: 'lucide:git-branch',
    },
  },
  {
    keywords: ['freelance'],
    style: {
      // color: 'bg-teal-950/30 text-teal-200',
      icon: 'lucide:briefcase',
    },
  },
  {
    keywords: ['team'],
    style: {
      // color: 'bg-violet-950/30 text-violet-200',
      icon: 'lucide:users',
    },
  },
  {
    keywords: ['contract'],
    style: {
      // color: 'bg-rose-950/30 text-rose-200',
      icon: 'lucide:file-text',
    },
  },
  {
    keywords: ['astro'],
    style: {
      // color: 'bg-orange-950/30 text-orange-200',
      icon: 'lucide:rocket',
    },
  },
  {
    keywords: ['shopify'],
    style: {
      // color: 'bg-green-950/30 text-green-200',
      icon: 'lucide:shopping-bag',
    },
  },
  {
    keywords: ['html'],
    style: {
      // color: 'bg-red-950/30 text-red-200',
      icon: 'lucide:code-2',
    },
  },
  {
    keywords: ['figma'],
    style: {
      // color: 'bg-purple-950/30 text-purple-200',
      icon: 'lucide:palette',
    },
  },
]

const getCategoryStyle = (content: string) => {
  const lowerContent = content.toLowerCase()

  const match = categoryMappings.find((category) =>
    category.keywords.some((keyword) => lowerContent.includes(keyword)),
  )

  return match?.style || null
}

const content = text || (typeof children === 'string' ? children : '')
const categoryStyle = getCategoryStyle(content)
---

<BadgeComponent
  variant={categoryStyle ? 'secondary' : variant}
  className={cn(categoryStyle?.color, className)}
  client:load
>
  {
    showIcon && (
      <Icon
        name={categoryStyle ? categoryStyle.icon : 'lucide:hash'}
        class="size-3"
      />
    )
  }
  <slot>{text}</slot>
</BadgeComponent>